{
    "componentChunkName": "component---src-pages-otherlaunch-mxexception-mdx",
    "path": "/otherlaunch/mxexception/",
    "result": {"pageContext":{"frontmatter":{"title":"MXException automation script"},"relativePagePath":"/otherlaunch/mxexception.mdx","titleType":"append","MdxNode":{"id":"94f2bd24-bab4-5987-9d1e-afb9ed320de0","children":[],"parent":"8739d296-e040-59f4-b8a9-7dda53748ad1","internal":{"content":"---\ntitle: MXException automation script\n---\n\nMXException provides automation script developers a script point for MXException to execute the script when an MXException is thrown from Maximo code.\nThis primarily helps add more information to an existing message, for example, adding a user name, someone who would have caused the exception, to the message.\nThis can also help in taking some automated action geared towards serviceability, like sending an email alert to an admin.\n\n\n## Trigger point\n\nScript name should be MXERR.{Err Group}.{Err Key}\nA script can be associated per error key/group. Event trigger point is when the exception is instantiated and not when it is thrown.  \n\n\n\n|Variable name|Variable type|Purpose\n|:-----------|:------------|:-----------------------------|\n|egroup|IN|Error group name|\n|ekey|IN|Error key name|\n|eparams|IN|Error params as an array|\n|mxerrormsg|OUT|The additional message that gets appended at the end of the original error message|\n\n\nThe following example script sends an email when there is a specific error.\n\n\n## Example Script\n\n```python\nfrom psdi.server import MXServer\nif egroup==\"iface\" and ekey=\"something\":\n  MXServer.sendEmail(\"to@b.c\",\"from@b.c\",egroup+\"#\"+ekey+\" happened.\",\"look at queue error reprocessing app for error message and retry\")\n```","type":"Mdx","contentDigest":"d695a51358b4747319a5f8f344015f7e","owner":"gatsby-plugin-mdx","counter":174},"frontmatter":{"title":"MXException automation script"},"exports":{},"rawBody":"---\ntitle: MXException automation script\n---\n\nMXException provides automation script developers a script point for MXException to execute the script when an MXException is thrown from Maximo code.\nThis primarily helps add more information to an existing message, for example, adding a user name, someone who would have caused the exception, to the message.\nThis can also help in taking some automated action geared towards serviceability, like sending an email alert to an admin.\n\n\n## Trigger point\n\nScript name should be MXERR.{Err Group}.{Err Key}\nA script can be associated per error key/group. Event trigger point is when the exception is instantiated and not when it is thrown.  \n\n\n\n|Variable name|Variable type|Purpose\n|:-----------|:------------|:-----------------------------|\n|egroup|IN|Error group name|\n|ekey|IN|Error key name|\n|eparams|IN|Error params as an array|\n|mxerrormsg|OUT|The additional message that gets appended at the end of the original error message|\n\n\nThe following example script sends an email when there is a specific error.\n\n\n## Example Script\n\n```python\nfrom psdi.server import MXServer\nif egroup==\"iface\" and ekey=\"something\":\n  MXServer.sendEmail(\"to@b.c\",\"from@b.c\",egroup+\"#\"+ekey+\" happened.\",\"look at queue error reprocessing app for error message and retry\")\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/otherlaunch/mxexception.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}