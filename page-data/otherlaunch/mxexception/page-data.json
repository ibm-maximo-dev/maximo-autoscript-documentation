{
    "componentChunkName": "component---src-pages-otherlaunch-mxexception-mdx",
    "path": "/otherlaunch/mxexception/",
    "result": {"pageContext":{"frontmatter":{"title":"MXException Automation Script"},"relativePagePath":"/otherlaunch/mxexception.mdx","titleType":"append","MdxNode":{"id":"94f2bd24-bab4-5987-9d1e-afb9ed320de0","children":[],"parent":"8739d296-e040-59f4-b8a9-7dda53748ad1","internal":{"content":"---\ntitle: MXException Automation Script\n---\n\nThis provides automation script developers a script point for MXException ie execute the script when an MXException is thrown from Maximo code.\nThis primarily helps add more information to an existing message – for example adding a user name (say - who would have caused this exception) to the message.\nThis can also help in taking some automated action – geared towards serviceability – like sending an email alert to an admin.\n\n\n## Trigger Point\n\nNo launch point definition – just a naming convention. Script name should be MXERR.{Err Group}.{Err Key}\nA script can be associated per error key/group. Event trigger point is when the exception is instantiated – not when its thrown.  \n\n\n\n|Variable name|Variable type|Purpose\n|:-----------|:------------|:-----------------------------|\n|egroup|IN|Error group name|\n|ekey|IN|Error key name|\n|eparams|IN|Error params as an array|\n|mxerrormsg|OUT|The additional message that gets appended at the end of the original error message|\n\n\nThe example script below send an email when there is a specific error.\n\n\n## Example Script\n\n```python\nfrom psdi.server import MXServer\nif egroup==\"iface\" and ekey=\"something\":\n  MXServer.sendEmail(\"to@b.c\",\"from@b.c\",egroup+\"#\"+ekey+\" happened.\",\"look at queue error reprocessing app for error message and retry\")\n```","type":"Mdx","contentDigest":"2048586818b42b97db4fca6d376f59f4","owner":"gatsby-plugin-mdx","counter":171},"frontmatter":{"title":"MXException Automation Script"},"exports":{},"rawBody":"---\ntitle: MXException Automation Script\n---\n\nThis provides automation script developers a script point for MXException ie execute the script when an MXException is thrown from Maximo code.\nThis primarily helps add more information to an existing message – for example adding a user name (say - who would have caused this exception) to the message.\nThis can also help in taking some automated action – geared towards serviceability – like sending an email alert to an admin.\n\n\n## Trigger Point\n\nNo launch point definition – just a naming convention. Script name should be MXERR.{Err Group}.{Err Key}\nA script can be associated per error key/group. Event trigger point is when the exception is instantiated – not when its thrown.  \n\n\n\n|Variable name|Variable type|Purpose\n|:-----------|:------------|:-----------------------------|\n|egroup|IN|Error group name|\n|ekey|IN|Error key name|\n|eparams|IN|Error params as an array|\n|mxerrormsg|OUT|The additional message that gets appended at the end of the original error message|\n\n\nThe example script below send an email when there is a specific error.\n\n\n## Example Script\n\n```python\nfrom psdi.server import MXServer\nif egroup==\"iface\" and ekey=\"something\":\n  MXServer.sendEmail(\"to@b.c\",\"from@b.c\",egroup+\"#\"+ekey+\" happened.\",\"look at queue error reprocessing app for error message and retry\")\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/otherlaunch/mxexception.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}