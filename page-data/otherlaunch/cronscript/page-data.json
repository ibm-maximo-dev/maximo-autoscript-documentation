{
    "componentChunkName": "component---src-pages-otherlaunch-cronscript-mdx",
    "path": "/otherlaunch/cronscript/",
    "result": {"pageContext":{"frontmatter":{"title":"Scripting Cron Tasks in Maximo"},"relativePagePath":"/otherlaunch/cronscript.mdx","titleType":"append","MdxNode":{"id":"aae0b924-3964-5c2e-b363-90a1e9faa991","children":[],"parent":"155b7d34-7acf-54e7-8dd3-a10229d90fb0","internal":{"content":"---\ntitle: Scripting Cron Tasks in Maximo\n---\n\n\nStarting 76 we can write scripts for cron tasks too. It follows the same principle as the endpoint\nhandler. We have a cron class - com.ibm.tivoli.maximo.script.ScriptCrontask that helps achieve\nthis. We need to register that class as a new crontask in the crontask application. We then will\ncreate an instance of it and set the “scriptname” property to the name of the script that we want\nthis task to run. Next we need to set the schedule and last but not the least - need to define the\nscript. We are then good to go running this newly defined script with the crontasks. It is no\ndifferent than any other crontasks and you can activate/deactivate the task or change the\nschedule as you would do in any other cron task.\n\n\nIf you are wondering why we need this when we already have an escalation which is a crontask\nthat works of a given Maximo object. The answer is simple - we often need to schedule jobs that\nare not just based off Maximo objects. So in those cases, this crontask based scripts would\ncome in handy.\n\n\nBelow we develop a cron script to log an error when the count of maxsessions exceeds a\nconfigured limit.\n\n\n**Step 1**\nWe will first need to register the script crontask definition. For that we will use the Crontask app\nand the class name would be com.ibm.tivoli.maximo.script.ScriptCrontask. We will also need to\ncreate a cron task instance.\nIn that instance we can set the frequency to 30 sec.\nWe can set the SCRPTNAME param value to SESSIONCOUNT. This implies that we will create\na script names SESSIONCOUNT to do the job.\n\n\n**Step 2**\nNext we create the script SESSIONCOUNT. A sample script in py is shown below. Note that the\n\"runasUserInfo\" implicit var will hold the userinfo for the cron job.\n\n\n```python\nfrom psdi.server import MXServer\ncnt = MXServer.getMXServer().getMboSet(\"maxsession\",runAsUserInfo).count();\nif cnt>1:\n  service.logError(\"cnt exceeds 1::\"+str(cnt))\n```\n\n**Step 3**\nNext we activate the crontask instance. You need to wait a minute or so for the task to start.\nYou can use another browser instance to login to maximo – just to create another maxsesson\nrecord. That is when you can see that log that says \"cnt exceeds 1::\".\n\n\n**Step 4**\nNote that we hard coded the count limit. In this step we can softcode this by leveraging the\nSCRIPTARG parameter in the Crontask. We can set that to 1. We need to now save and reload\nthe task.\n\n\n**Step 5**\nNext we modify the script to leverage that SCRIPTARG parameter using the implicit var called\n\"arg\" as below.\n\n\n```python\nfrom psdi.server import MXServer\nargval = int(arg)\ncnt = MXServer.getMXServer().getMboSet(\"maxsession\",runAsUserInfo).count();\nif cnt>argval:\n  service.logError(\"cnt exceeds 1::\"+str(cnt))\n```\n\n\n**Step 6**\nYou can now repeat step 3 to see if you get the error log.\n\n","type":"Mdx","contentDigest":"63dd44db506d532233a39fd031b30e19","owner":"gatsby-plugin-mdx","counter":170},"frontmatter":{"title":"Scripting Cron Tasks in Maximo"},"exports":{},"rawBody":"---\ntitle: Scripting Cron Tasks in Maximo\n---\n\n\nStarting 76 we can write scripts for cron tasks too. It follows the same principle as the endpoint\nhandler. We have a cron class - com.ibm.tivoli.maximo.script.ScriptCrontask that helps achieve\nthis. We need to register that class as a new crontask in the crontask application. We then will\ncreate an instance of it and set the “scriptname” property to the name of the script that we want\nthis task to run. Next we need to set the schedule and last but not the least - need to define the\nscript. We are then good to go running this newly defined script with the crontasks. It is no\ndifferent than any other crontasks and you can activate/deactivate the task or change the\nschedule as you would do in any other cron task.\n\n\nIf you are wondering why we need this when we already have an escalation which is a crontask\nthat works of a given Maximo object. The answer is simple - we often need to schedule jobs that\nare not just based off Maximo objects. So in those cases, this crontask based scripts would\ncome in handy.\n\n\nBelow we develop a cron script to log an error when the count of maxsessions exceeds a\nconfigured limit.\n\n\n**Step 1**\nWe will first need to register the script crontask definition. For that we will use the Crontask app\nand the class name would be com.ibm.tivoli.maximo.script.ScriptCrontask. We will also need to\ncreate a cron task instance.\nIn that instance we can set the frequency to 30 sec.\nWe can set the SCRPTNAME param value to SESSIONCOUNT. This implies that we will create\na script names SESSIONCOUNT to do the job.\n\n\n**Step 2**\nNext we create the script SESSIONCOUNT. A sample script in py is shown below. Note that the\n\"runasUserInfo\" implicit var will hold the userinfo for the cron job.\n\n\n```python\nfrom psdi.server import MXServer\ncnt = MXServer.getMXServer().getMboSet(\"maxsession\",runAsUserInfo).count();\nif cnt>1:\n  service.logError(\"cnt exceeds 1::\"+str(cnt))\n```\n\n**Step 3**\nNext we activate the crontask instance. You need to wait a minute or so for the task to start.\nYou can use another browser instance to login to maximo – just to create another maxsesson\nrecord. That is when you can see that log that says \"cnt exceeds 1::\".\n\n\n**Step 4**\nNote that we hard coded the count limit. In this step we can softcode this by leveraging the\nSCRIPTARG parameter in the Crontask. We can set that to 1. We need to now save and reload\nthe task.\n\n\n**Step 5**\nNext we modify the script to leverage that SCRIPTARG parameter using the implicit var called\n\"arg\" as below.\n\n\n```python\nfrom psdi.server import MXServer\nargval = int(arg)\ncnt = MXServer.getMXServer().getMboSet(\"maxsession\",runAsUserInfo).count();\nif cnt>argval:\n  service.logError(\"cnt exceeds 1::\"+str(cnt))\n```\n\n\n**Step 6**\nYou can now repeat step 3 to see if you get the error log.\n\n","fileAbsolutePath":"/home/sls/git/maximo-app-framework/maximo-autoscript-documentation/src/pages/otherlaunch/cronscript.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}