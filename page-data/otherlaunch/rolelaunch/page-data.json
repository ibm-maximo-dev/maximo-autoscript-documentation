{
    "componentChunkName": "component---src-pages-otherlaunch-rolelaunch-mdx",
    "path": "/otherlaunch/rolelaunch/",
    "result": {"pageContext":{"frontmatter":{"title":"Role Automation Script"},"relativePagePath":"/otherlaunch/rolelaunch.mdx","titleType":"append","MdxNode":{"id":"32c935dc-fcbb-5e0a-8434-101ec6df8deb","children":[],"parent":"034cedff-28c4-5955-be92-6b1ade133db9","internal":{"content":"---\ntitle: Role Automation Script\n---\nThis feature requires Manage 8.2.0 or Maximo 7.6.1.3 (not yet released as of this writing). Roles play an important part in Workflow and Communication Templates. Roles often resolve to a specific person or email based on data on the record, such as the supervisor on the Work Order. In those cases, this functionality is not needed.\n\nYou would use this functionality when the scenario becomes more complicated, such as needing to traverse the person's supervisor hierarchy until you get to someone with sufficient approval limits that can approve the PO. When you only need to return a single value, you could create a non-persistent attribute and populate that attribute via an Attribute launch point. But that would require an outage for the database configuration and wouldn't support returning more than a single value. This where the Role Automation Script comes in.\n\nTo create a role based Automation Script, create a role with the type of Custom class and the value of \"com.ibm.tivoli.maximo.script.ScriptCustomRole\". \n\n![Role Definition](roledefinition.jpg) \n\nThe name of the role (EMXROLE in this example) will be utilized in defining the automation script. The script is created without a launch point in the name format MAXROLE.ROLENAME. For example, in this case MAXROLE.EMXROLE.\n#### IMPORTANT: Ensure that you enable the ability to invoke script functions. This is disabled by default and the script will not execute without this. You cannot change this after creation so you will need to delete and recreate the automation script if you forgot to enable it. \n\n![Role Script Creation](rolescriptcreate.jpg) \n\nThere are two functions that you can declare in your script that will be invoked. You can declare evalToEmail or evalToPerson functions. Those functions will be passed a variable that will expose the methods from the ScriptRoleContext. ScriptRoleContext extends ScriptService so all of those methods are available as well.\n\n## Public Methods Available in ScriptRoleContext\n\n|Method Name|Parameters (Type)|Description|\n|:-----------|:-----------|:----------------------|\n|getMaxRole|None|Returns the MAXROLE Mbo. This class exposes a variety of methods that can be utilized such as getPerson(personid) to get a person MBO.|\n|addEmailId|Email (String)|Adds a new email address to the array to be sent.|\n|getEmailIds|None|Returns the string array of the emails that have been added.|\n|setPersonOrGroupMbo|Mbo (Mbo)|Sets either a Person MBO or PersonGroup MBO.|\n|getPersonOrGroupMbo|None|Returns the Person or PersonGroup MBO that has been set.|\n|getMbo|None|Comes from ScriptService but will be commonly used. This returns the MBO record (IE WORKORDER) for resolving.|\n\n## Example Script\n\n```python\ndef evalToPerson(ctx):\n    # This method comes from the ScriptService \n    mbo=ctx.getMbo()\n\n    personGroup=None\n    if mbo.getString(\"SITEID\")==\"BEDFORD\":\n        personSet=mbo.getMboSet(\"$EMXPERSONGROUP\",\"PERSONGROUP\",\"persongroup='TIER1'\")\n        personGroup=personSet.moveFirst()\n    else:\n        personSet=mbo.getMboSet(\"$EMXPERSONGROUP\",\"PERSONGROUP\",\"persongroup='TIER2'\")\n        personGroup=personSet.moveFirst()\n\n    # This comes from the ScriptRoleContext\n    ctx.setPersonOrGroupMbo(personGroup)\n```","type":"Mdx","contentDigest":"e5ac4ac41317ff01ed999a15d5c1c17d","owner":"gatsby-plugin-mdx","counter":175},"frontmatter":{"title":"Role Automation Script"},"exports":{},"rawBody":"---\ntitle: Role Automation Script\n---\nThis feature requires Manage 8.2.0 or Maximo 7.6.1.3 (not yet released as of this writing). Roles play an important part in Workflow and Communication Templates. Roles often resolve to a specific person or email based on data on the record, such as the supervisor on the Work Order. In those cases, this functionality is not needed.\n\nYou would use this functionality when the scenario becomes more complicated, such as needing to traverse the person's supervisor hierarchy until you get to someone with sufficient approval limits that can approve the PO. When you only need to return a single value, you could create a non-persistent attribute and populate that attribute via an Attribute launch point. But that would require an outage for the database configuration and wouldn't support returning more than a single value. This where the Role Automation Script comes in.\n\nTo create a role based Automation Script, create a role with the type of Custom class and the value of \"com.ibm.tivoli.maximo.script.ScriptCustomRole\". \n\n![Role Definition](roledefinition.jpg) \n\nThe name of the role (EMXROLE in this example) will be utilized in defining the automation script. The script is created without a launch point in the name format MAXROLE.ROLENAME. For example, in this case MAXROLE.EMXROLE.\n#### IMPORTANT: Ensure that you enable the ability to invoke script functions. This is disabled by default and the script will not execute without this. You cannot change this after creation so you will need to delete and recreate the automation script if you forgot to enable it. \n\n![Role Script Creation](rolescriptcreate.jpg) \n\nThere are two functions that you can declare in your script that will be invoked. You can declare evalToEmail or evalToPerson functions. Those functions will be passed a variable that will expose the methods from the ScriptRoleContext. ScriptRoleContext extends ScriptService so all of those methods are available as well.\n\n## Public Methods Available in ScriptRoleContext\n\n|Method Name|Parameters (Type)|Description|\n|:-----------|:-----------|:----------------------|\n|getMaxRole|None|Returns the MAXROLE Mbo. This class exposes a variety of methods that can be utilized such as getPerson(personid) to get a person MBO.|\n|addEmailId|Email (String)|Adds a new email address to the array to be sent.|\n|getEmailIds|None|Returns the string array of the emails that have been added.|\n|setPersonOrGroupMbo|Mbo (Mbo)|Sets either a Person MBO or PersonGroup MBO.|\n|getPersonOrGroupMbo|None|Returns the Person or PersonGroup MBO that has been set.|\n|getMbo|None|Comes from ScriptService but will be commonly used. This returns the MBO record (IE WORKORDER) for resolving.|\n\n## Example Script\n\n```python\ndef evalToPerson(ctx):\n    # This method comes from the ScriptService \n    mbo=ctx.getMbo()\n\n    personGroup=None\n    if mbo.getString(\"SITEID\")==\"BEDFORD\":\n        personSet=mbo.getMboSet(\"$EMXPERSONGROUP\",\"PERSONGROUP\",\"persongroup='TIER1'\")\n        personGroup=personSet.moveFirst()\n    else:\n        personSet=mbo.getMboSet(\"$EMXPERSONGROUP\",\"PERSONGROUP\",\"persongroup='TIER2'\")\n        personGroup=personSet.moveFirst()\n\n    # This comes from the ScriptRoleContext\n    ctx.setPersonOrGroupMbo(personGroup)\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/otherlaunch/rolelaunch.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}