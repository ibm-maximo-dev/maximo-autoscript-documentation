{
    "componentChunkName": "component---src-pages-integration-mifworkflow-mdx",
    "path": "/integration/mifworkflow/",
    "result": {"pageContext":{"frontmatter":{"title":"Invoking workflow from inbound MIF"},"relativePagePath":"/integration/mifworkflow.mdx","titleType":"append","MdxNode":{"id":"4f98b690-65ec-56d7-b2df-01678d91e09f","children":[],"parent":"cf2af015-b80c-5dd9-9385-f2cb64b5d3a8","internal":{"content":"---\ntitle: Invoking workflow from inbound MIF\n---\n\nThis is a common ask - how do I invoke a workflow after my mbo is inserted or updated using\nMIF. The questions comes up often as the current UI framework allows such a feature to\nautomatically invoke workflow on save of the application mbo. Below is a sample python\nexample that does invoke a workflow that will create an assignment when a new workorder is\ncreated using MIF inbound.  \n\n\nTo do this we will write an Object Structure script that will invoke the workflow. We will use the\nnew Integration Scripts action from the Scripting application. Select the options – Object\nStructure -> MXWODETAIL (Object Structure name) ->Inbound Processing.\n\n\n```python\nfrom psdi.server import MXServer\n\ndef afterProcess(ctx):\n  mbo = ctx.getPrimaryMbo()\n  if mbo.isNew():\n    MXServer.getMXServer().lookup(\"WORKFLOW\").initiateWorkflow(\"WOSTATUS\",mbo)\n```\n\nNote the use of the `ctx` var – which is same as the global implicit var `service` but with added\nfunctionality for Object Structure processing.\n\n\nA simple way to test this would be to use the REST json api:\n\n\n```\nPOST http://host:port/maximo/oslc/os/mxwodetail?lean=1\n{\n“wonum”:”MYLABWO11”,\n“siteid”:”BEDFORD”,\n“description”:”Invoke workflow test”\n}\n```\n\n\nOnce we POST this json, it will invoke the script and will create an assignment for the logged in\nuser. You can verify that from the start center assignments portlet.\n\n\nIf interested, you can now enhance the script to make sure that this workflow initiation is only\ndone for transactions that have the status as WAPPR (you can use the ctx.getPrimaryMbo() to\ncheck that).\n","type":"Mdx","contentDigest":"47026f927fff0629882aba13166b6f5a","owner":"gatsby-plugin-mdx","counter":156},"frontmatter":{"title":"Invoking workflow from inbound MIF"},"exports":{},"rawBody":"---\ntitle: Invoking workflow from inbound MIF\n---\n\nThis is a common ask - how do I invoke a workflow after my mbo is inserted or updated using\nMIF. The questions comes up often as the current UI framework allows such a feature to\nautomatically invoke workflow on save of the application mbo. Below is a sample python\nexample that does invoke a workflow that will create an assignment when a new workorder is\ncreated using MIF inbound.  \n\n\nTo do this we will write an Object Structure script that will invoke the workflow. We will use the\nnew Integration Scripts action from the Scripting application. Select the options – Object\nStructure -> MXWODETAIL (Object Structure name) ->Inbound Processing.\n\n\n```python\nfrom psdi.server import MXServer\n\ndef afterProcess(ctx):\n  mbo = ctx.getPrimaryMbo()\n  if mbo.isNew():\n    MXServer.getMXServer().lookup(\"WORKFLOW\").initiateWorkflow(\"WOSTATUS\",mbo)\n```\n\nNote the use of the `ctx` var – which is same as the global implicit var `service` but with added\nfunctionality for Object Structure processing.\n\n\nA simple way to test this would be to use the REST json api:\n\n\n```\nPOST http://host:port/maximo/oslc/os/mxwodetail?lean=1\n{\n“wonum”:”MYLABWO11”,\n“siteid”:”BEDFORD”,\n“description”:”Invoke workflow test”\n}\n```\n\n\nOnce we POST this json, it will invoke the script and will create an assignment for the logged in\nuser. You can verify that from the start center assignments portlet.\n\n\nIf interested, you can now enhance the script to make sure that this workflow initiation is only\ndone for transactions that have the status as WAPPR (you can use the ctx.getPrimaryMbo() to\ncheck that).\n","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/integration/mifworkflow.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}