{
    "componentChunkName": "component---src-pages-integration-integrationevents-mdx",
    "path": "/integration/integrationevents/",
    "result": {"pageContext":{"frontmatter":{"title":"Integration Scripting"},"relativePagePath":"/integration/integrationevents.mdx","titleType":"append","MdxNode":{"id":"62fa5926-4bb2-5de5-aca0-202fbda0a055","children":[],"parent":"e3f8365c-9f4a-5a93-a2cd-084074b0e017","internal":{"content":"---\ntitle: Integration Scripting\n---\n\nIn release 7.6 of Maximo, scripting has been enabled within the Integration Framework to support customization, in addition to the existing customization options of Processing Rules, Java and XSL. For those who customize using Java, scripting offers an alternative approach that eliminates the need to rebuild and redeploy the Maximo EAR file.\nScripting has been enabled at processing points on most of the integration components that currently support Java as a means to customize. Below is a screen shot for launching the Integration script wizard:\n\n![Integration](integration.jpg)\n\n## Integration Points Supported By Scripting\n\n\n|Object Structure|\n|:--------------------------------|\n|Inbound Processing Class|\n|Outbound Definition Class|\n\n\n|Publish Channel|\n|:--------------------------------|\n|Processing Class (often referred to as External Exit)|\n|User Exit Class (scripting supports the 'before' and 'after' methods)|\n|Event Filter Class|\n\n\n|Invocation Channel (for Request and Response processing)|\n|:--------------------------------------------------------|\n|Processing Class (often referred to as External Exit)|\n|User Exit (scripting supports both the 'before' and 'after' methods)|\n\n\n|Enterprise Service (for Request and Response processing)|\n|:--------------------------------------------------------|\n|Processing Class (often referred to as External Exit)|\n|User Exit (scripting supports both the 'before' and 'after' methods)|\n\n|Endpoint Script|\n|:--------------------------------------------------------|\n|Custom Endpoint Handlers|\n|HTTP Handler Exits|\n|JAX-WS Webservice Handler Exits|\n\n\n\n","type":"Mdx","contentDigest":"6de32c7b7fad075934f9b9aeecbe6c92","owner":"gatsby-plugin-mdx","counter":154},"frontmatter":{"title":"Integration Scripting"},"exports":{},"rawBody":"---\ntitle: Integration Scripting\n---\n\nIn release 7.6 of Maximo, scripting has been enabled within the Integration Framework to support customization, in addition to the existing customization options of Processing Rules, Java and XSL. For those who customize using Java, scripting offers an alternative approach that eliminates the need to rebuild and redeploy the Maximo EAR file.\nScripting has been enabled at processing points on most of the integration components that currently support Java as a means to customize. Below is a screen shot for launching the Integration script wizard:\n\n![Integration](integration.jpg)\n\n## Integration Points Supported By Scripting\n\n\n|Object Structure|\n|:--------------------------------|\n|Inbound Processing Class|\n|Outbound Definition Class|\n\n\n|Publish Channel|\n|:--------------------------------|\n|Processing Class (often referred to as External Exit)|\n|User Exit Class (scripting supports the 'before' and 'after' methods)|\n|Event Filter Class|\n\n\n|Invocation Channel (for Request and Response processing)|\n|:--------------------------------------------------------|\n|Processing Class (often referred to as External Exit)|\n|User Exit (scripting supports both the 'before' and 'after' methods)|\n\n\n|Enterprise Service (for Request and Response processing)|\n|:--------------------------------------------------------|\n|Processing Class (often referred to as External Exit)|\n|User Exit (scripting supports both the 'before' and 'after' methods)|\n\n|Endpoint Script|\n|:--------------------------------------------------------|\n|Custom Endpoint Handlers|\n|HTTP Handler Exits|\n|JAX-WS Webservice Handler Exits|\n\n\n\n","fileAbsolutePath":"/home/sls/git/maximo-app-framework/maximo-autoscript-documentation/src/pages/integration/integrationevents.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}