{
    "componentChunkName": "component---src-pages-objectscripts-duplicateobject-mdx",
    "path": "/objectscripts/duplicateobject/",
    "result": {"pageContext":{"frontmatter":{"title":"OBJECTNAME.DUPLICATE Script"},"relativePagePath":"/objectscripts/duplicateobject.mdx","titleType":"append","MdxNode":{"id":"2cb30154-b8c8-5703-a3c5-2596e03f928e","children":[],"parent":"497be22a-4660-53db-b1b6-255a3c985e72","internal":{"content":"---\ntitle: OBJECTNAME.DUPLICATE Script\n---\nThis is a special type of automation script without a launch point. The name of the script must be in the format OBJECTNAME.DUPLICATE or OBJECTNAME.AFTERDUPLICATE. For example, if you wanted a script on PO you would call it PO.DUPLICATE.\n\nThese two events allow you to control logic that occurs when duplicating records. There are a variety of scenarios where this might be useful. The following examples are some scenarios where it may be useful:\n- Could be utilized to clear out values during duplication that cannot be be flagged to skip\n- Could be utilized to maintain a reference between the two records\n- Could be utilized to copy additional child objects that might not be handled by default, for example, custom objects \n\nThe difference between .DUPLICATE & .AFTERDUPLICATE is when the code is triggered. \n\nDUPLICATE occurs in the MBO method for copying the record. That means any time duplicate() or copy() are called on the MBO, including inside an automation script or integration, the .DUPLICATE script will be triggered. This is going to occur prior to any child data sets (for example, DOCLINKS, POLINES) being copied. If you need to modify those child data sets after they are copied you would need to create a script on the child data set named IE POLINE.DUPLICATE, or utilize AFTERDUPLICATE. \n\nAFTERDUPLICATE is currently handled in the DataBean class, from which the the classic Maximo UI extends, and the REST API action for duplicating a record. That means other events that would cause a record to duplicate, such as calling mbo.duplicate() inside of an automation script will NOT cause this script to execute. This limitation is important to understand to determine if this event can be utilized. AFTERDUPLICATE will occur after all the logic for duplication has occurred. For example, if the duplicate() function of a MBO copies in child data sets, those child data sets will have been copied when AFTERDUPLICATE executes.\n\n## Implicit variables\n|Variable name|Description|\n|:-----------|:----------------------|\n|mbo|The original MBO record that was duplicated|\n|dupmbo|The newly created MBO record|\n\n## Example Script\n```python\n# Clear out existing values\ndupmbo.setValueNull(\"ASSETNUM\")\n\n# Copy custom object set into new record\n# NOTE: You most likely would need to update the values that point to your record, such as WONUM, to the new record.\norigChildSet=mbo.getMboSet(\"MYCUSTOMRELATIONSHIP\")\norigChildSet.copy(dupmbo.getMboSet(\"MYCUSTOMRELATIONSHIP\"))\n```","type":"Mdx","contentDigest":"b1fb1874ff00ca36908b63d6d14c378d","owner":"gatsby-plugin-mdx","counter":204},"frontmatter":{"title":"OBJECTNAME.DUPLICATE Script"},"exports":{},"rawBody":"---\ntitle: OBJECTNAME.DUPLICATE Script\n---\nThis is a special type of automation script without a launch point. The name of the script must be in the format OBJECTNAME.DUPLICATE or OBJECTNAME.AFTERDUPLICATE. For example, if you wanted a script on PO you would call it PO.DUPLICATE.\n\nThese two events allow you to control logic that occurs when duplicating records. There are a variety of scenarios where this might be useful. The following examples are some scenarios where it may be useful:\n- Could be utilized to clear out values during duplication that cannot be be flagged to skip\n- Could be utilized to maintain a reference between the two records\n- Could be utilized to copy additional child objects that might not be handled by default, for example, custom objects \n\nThe difference between .DUPLICATE & .AFTERDUPLICATE is when the code is triggered. \n\nDUPLICATE occurs in the MBO method for copying the record. That means any time duplicate() or copy() are called on the MBO, including inside an automation script or integration, the .DUPLICATE script will be triggered. This is going to occur prior to any child data sets (for example, DOCLINKS, POLINES) being copied. If you need to modify those child data sets after they are copied you would need to create a script on the child data set named IE POLINE.DUPLICATE, or utilize AFTERDUPLICATE. \n\nAFTERDUPLICATE is currently handled in the DataBean class, from which the the classic Maximo UI extends, and the REST API action for duplicating a record. That means other events that would cause a record to duplicate, such as calling mbo.duplicate() inside of an automation script will NOT cause this script to execute. This limitation is important to understand to determine if this event can be utilized. AFTERDUPLICATE will occur after all the logic for duplication has occurred. For example, if the duplicate() function of a MBO copies in child data sets, those child data sets will have been copied when AFTERDUPLICATE executes.\n\n## Implicit variables\n|Variable name|Description|\n|:-----------|:----------------------|\n|mbo|The original MBO record that was duplicated|\n|dupmbo|The newly created MBO record|\n\n## Example Script\n```python\n# Clear out existing values\ndupmbo.setValueNull(\"ASSETNUM\")\n\n# Copy custom object set into new record\n# NOTE: You most likely would need to update the values that point to your record, such as WONUM, to the new record.\norigChildSet=mbo.getMboSet(\"MYCUSTOMRELATIONSHIP\")\norigChildSet.copy(dupmbo.getMboSet(\"MYCUSTOMRELATIONSHIP\"))\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/objectscripts/duplicateobject.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}