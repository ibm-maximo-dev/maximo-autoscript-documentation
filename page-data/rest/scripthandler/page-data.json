{
    "componentChunkName": "component---src-pages-rest-scripthandler-mdx",
    "path": "/rest/scripthandler/",
    "result": {"pageContext":{"frontmatter":{"title":"Invoking Script through Automation Script Handler"},"relativePagePath":"/rest/scripthandler.mdx","titleType":"append","MdxNode":{"id":"37e1c022-2c99-56e4-afe7-11837ae6b053","children":[],"parent":"8d701834-97d3-5c8e-9a74-86e665879e95","internal":{"content":"---\ntitle: Invoking Script through Automation Script Handler\n---\nThe REST API through simple configuration can support most customer use cases for retrieving or processing data. Occassionally there are scenarios where that is difficult to do with the existing APIs. In those cases you can create a script (no launch point) and call it (with either a GET or POST) like:\n\n```\nhttps://myurl.com/maximo/api/script/SCRIPTNAME?lean=1\n```\n\n## Implicit variables\n|Variable name|Description|\n|:-----------|:----------------------|\n|request|OslcRequest representation of the request being made. This exposes important methods such as request.getQueryParam(\"parameter\") & request.getHeader(\"header\") to retrieve values provided as a query parameter or header respectively. You can also access the UserInfo by calling request.getUserInfo().|\n|requestData|The byte[] representation of data sent in the body of the request.|\n|requestDataS|When the request byte[] represents a UTF-8 string, this will contain a Java String version of the data. In cases where it is not a string (or can't be encoded to UTF-8), this variable will not be declared.|\n|httpMethod|Whether this was a GET, POST, PUT, etc. Can also be retrieved by calling request.getHttpMethod().|\n|responseData|The script sets this as either a byte[] or String to return in the response. This is not required if you don't intend to return a response.|\n|responseHeaders|The script can provide additional headers to this HashMap to return to the calling application.|\n\n## Example Script\n```python\n# This example will change the user's default insert site based on the query parameter. \n# This is different than setting it on the MAXUSER record because this updates for the current session.\nfrom psdi.server import MXServer\nmaxServer=MXServer.getMXServer()\nsiteid=request.getQueryParam(\"siteid\")\nif siteid and maxServer.isValidSite(siteid):\n    userInfo=request.getUserInfo()\n    userSet=maxServer.getMboSet(\"MAXUSER\",userInfo)\n    userSet.setQbeExactMatch(True)\n    userSet.setQbe(\"userid\",userInfo.getUserName())\n    userMbo=userSet.moveFirst()\n    if userMbo:\n        userMbo.setValue(\"DEFSITE\",siteid)\n        securityService=maxServer.lookup(\"SECURITY\")\n        securityService.refreshSecurityInfo(userInfo.getUserName(),userMbo,userMbo.getMboSet(\"PERSON\").getMbo(0))\n        userSet.save()\n    userSet.close()\nelse:\n    service.error(\"system\",\"invalidsite\",[siteid])\n```\n\nCall with a GET/POST request like: \n```\nhttps://myurl.com/maximo/oslc/script/setinsertsite?lean=1&siteid=BEDFORD\n```","type":"Mdx","contentDigest":"4da035c8c1375385622f299fd6319d63","owner":"gatsby-plugin-mdx","counter":177},"frontmatter":{"title":"Invoking Script through Automation Script Handler"},"exports":{},"rawBody":"---\ntitle: Invoking Script through Automation Script Handler\n---\nThe REST API through simple configuration can support most customer use cases for retrieving or processing data. Occassionally there are scenarios where that is difficult to do with the existing APIs. In those cases you can create a script (no launch point) and call it (with either a GET or POST) like:\n\n```\nhttps://myurl.com/maximo/api/script/SCRIPTNAME?lean=1\n```\n\n## Implicit variables\n|Variable name|Description|\n|:-----------|:----------------------|\n|request|OslcRequest representation of the request being made. This exposes important methods such as request.getQueryParam(\"parameter\") & request.getHeader(\"header\") to retrieve values provided as a query parameter or header respectively. You can also access the UserInfo by calling request.getUserInfo().|\n|requestData|The byte[] representation of data sent in the body of the request.|\n|requestDataS|When the request byte[] represents a UTF-8 string, this will contain a Java String version of the data. In cases where it is not a string (or can't be encoded to UTF-8), this variable will not be declared.|\n|httpMethod|Whether this was a GET, POST, PUT, etc. Can also be retrieved by calling request.getHttpMethod().|\n|responseData|The script sets this as either a byte[] or String to return in the response. This is not required if you don't intend to return a response.|\n|responseHeaders|The script can provide additional headers to this HashMap to return to the calling application.|\n\n## Example Script\n```python\n# This example will change the user's default insert site based on the query parameter. \n# This is different than setting it on the MAXUSER record because this updates for the current session.\nfrom psdi.server import MXServer\nmaxServer=MXServer.getMXServer()\nsiteid=request.getQueryParam(\"siteid\")\nif siteid and maxServer.isValidSite(siteid):\n    userInfo=request.getUserInfo()\n    userSet=maxServer.getMboSet(\"MAXUSER\",userInfo)\n    userSet.setQbeExactMatch(True)\n    userSet.setQbe(\"userid\",userInfo.getUserName())\n    userMbo=userSet.moveFirst()\n    if userMbo:\n        userMbo.setValue(\"DEFSITE\",siteid)\n        securityService=maxServer.lookup(\"SECURITY\")\n        securityService.refreshSecurityInfo(userInfo.getUserName(),userMbo,userMbo.getMboSet(\"PERSON\").getMbo(0))\n        userSet.save()\n    userSet.close()\nelse:\n    service.error(\"system\",\"invalidsite\",[siteid])\n```\n\nCall with a GET/POST request like: \n```\nhttps://myurl.com/maximo/oslc/script/setinsertsite?lean=1&siteid=BEDFORD\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/rest/scripthandler.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}