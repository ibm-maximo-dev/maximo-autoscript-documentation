{
    "componentChunkName": "component---src-pages-rest-osquery-mdx",
    "path": "/rest/osquery/",
    "result": {"pageContext":{"frontmatter":{"title":"Object structure query"},"relativePagePath":"/rest/osquery.mdx","titleType":"append","MdxNode":{"id":"5f77b314-b270-5554-88dd-a60c46c7cffd","children":[],"parent":"cff3dbc2-f8a9-5a1e-aaeb-8d506dc5f060","internal":{"content":"---\ntitle: Object structure query\n---\nWhen retrieving data, the REST API framework provides multiple ways to filter the data returned. Some of the options can be found here: [REST API Query Documentation](https://community.ibm.com/HigherLogic/System/DownloadDocumentFile.ashx?DocumentFileKey=9408db2d-2f55-804e-5d92-48038faf258e&forceDialog=0)\n\nWhen the existing options are insufficient, you can utilize an object structure query automation script. For example, if you wanted to retrieve all WOs in an INPRG status that referenced a particular ASSET or LOCATION you would want to generate the following SQL statement:\n\n```sql\nhistoryflag=0 and istask=0 and status='INPRG' and (location='BR430' or assetnum='11430')\n```\n\nUntil Manage 8.3 or Maximo 7.6.1.3, utilizing the oslc.where would not allow you to combine AND and OR statements in the where clause. \n\n## Implicit variables\n|Variable name|Description|\n|:-----------|:----------------------|\n|mboset|This is the MboSet for the main object of your object structure. You utilize this to set the where clause that gets applied.|\n\n1. Create an Automation Script for Integration. Choose Object Structure, select the object structure in question, and give it a unique Query Name\n   ![Query Script Creation](osquerydefinition.jpg) \n\n2. Add variables to the script that you want to be provided as query parameters (sqp:variable). These need to be defined as Literal variables with a value, such as * in the example. If the query parameter is not provided, the literal value defined on the script is used. \n   ![Query Script Variables](osqueryvariables.jpg) \n\n3. Create the query definition for the script. In the **Object Structure** application, you must add the query \"script\" type, select the script name, and provide a description. \n\n## Example script\n```python\ndef isSet(variable):\n    return variable and variable!='*'\n\nfrom psdi.mbo import SqlFormat\nquery=\"historyflag=0 and istask=0 \"\nif isSet(assetnum) and isSet(location):\n    query+=\" and (assetnum=:1 or location=:2) \"\nelif isSet(assetnum):\n    query+=\" and assetnum=:1 \"\nelif isSet(location):\n    query+=\" and location=:2 \"\nif isSet(status):\n    query+= \" and status=:3 \"\nsqf=SqlFormat(query)\n\n# Check that values are set before calling setObject or it fail\nif isSet(assetnum):\n    sqf.setObject(1,\"WORKORDER\",\"ASSETNUM\",assetnum)\nif isSet(location):\n    sqf.setObject(2,\"WORKORDER\",\"LOCATION\",location)\nif isSet(status):\n    sqf.setObject(3,\"WORKORDER\",\"STATUS\",status)\n\nmboset.setWhere(sqf.format())\n```\n\nCall with a GET request like: \n```\nhttps://myurl.com/maximo/oslc/os/mxapiwodetail?lean=1&oslc.select=wonum,description,siteid&oslc.pageSize=40&savedQuery=OSQUERY.MXAPIWODETAIL.EMXWOFILTER&sqp:assetnum=11430&sqp:location=BR430\n```","type":"Mdx","contentDigest":"1d2d843b8bbd184d177b4500f25f180e","owner":"gatsby-plugin-mdx","counter":177},"frontmatter":{"title":"Object structure query"},"exports":{},"rawBody":"---\ntitle: Object structure query\n---\nWhen retrieving data, the REST API framework provides multiple ways to filter the data returned. Some of the options can be found here: [REST API Query Documentation](https://community.ibm.com/HigherLogic/System/DownloadDocumentFile.ashx?DocumentFileKey=9408db2d-2f55-804e-5d92-48038faf258e&forceDialog=0)\n\nWhen the existing options are insufficient, you can utilize an object structure query automation script. For example, if you wanted to retrieve all WOs in an INPRG status that referenced a particular ASSET or LOCATION you would want to generate the following SQL statement:\n\n```sql\nhistoryflag=0 and istask=0 and status='INPRG' and (location='BR430' or assetnum='11430')\n```\n\nUntil Manage 8.3 or Maximo 7.6.1.3, utilizing the oslc.where would not allow you to combine AND and OR statements in the where clause. \n\n## Implicit variables\n|Variable name|Description|\n|:-----------|:----------------------|\n|mboset|This is the MboSet for the main object of your object structure. You utilize this to set the where clause that gets applied.|\n\n1. Create an Automation Script for Integration. Choose Object Structure, select the object structure in question, and give it a unique Query Name\n   ![Query Script Creation](osquerydefinition.jpg) \n\n2. Add variables to the script that you want to be provided as query parameters (sqp:variable). These need to be defined as Literal variables with a value, such as * in the example. If the query parameter is not provided, the literal value defined on the script is used. \n   ![Query Script Variables](osqueryvariables.jpg) \n\n3. Create the query definition for the script. In the **Object Structure** application, you must add the query \"script\" type, select the script name, and provide a description. \n\n## Example script\n```python\ndef isSet(variable):\n    return variable and variable!='*'\n\nfrom psdi.mbo import SqlFormat\nquery=\"historyflag=0 and istask=0 \"\nif isSet(assetnum) and isSet(location):\n    query+=\" and (assetnum=:1 or location=:2) \"\nelif isSet(assetnum):\n    query+=\" and assetnum=:1 \"\nelif isSet(location):\n    query+=\" and location=:2 \"\nif isSet(status):\n    query+= \" and status=:3 \"\nsqf=SqlFormat(query)\n\n# Check that values are set before calling setObject or it fail\nif isSet(assetnum):\n    sqf.setObject(1,\"WORKORDER\",\"ASSETNUM\",assetnum)\nif isSet(location):\n    sqf.setObject(2,\"WORKORDER\",\"LOCATION\",location)\nif isSet(status):\n    sqf.setObject(3,\"WORKORDER\",\"STATUS\",status)\n\nmboset.setWhere(sqf.format())\n```\n\nCall with a GET request like: \n```\nhttps://myurl.com/maximo/oslc/os/mxapiwodetail?lean=1&oslc.select=wonum,description,siteid&oslc.pageSize=40&savedQuery=OSQUERY.MXAPIWODETAIL.EMXWOFILTER&sqp:assetnum=11430&sqp:location=BR430\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/rest/osquery.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}