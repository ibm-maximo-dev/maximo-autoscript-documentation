{
    "componentChunkName": "component---src-pages-coreconcepts-mboconstants-mdx",
    "path": "/coreconcepts/mboconstants/",
    "result": {"pageContext":{"frontmatter":{"title":"MBO Constants"},"relativePagePath":"/coreconcepts/mboconstants.mdx","titleType":"append","MdxNode":{"id":"58cb5017-b2de-5a46-ba03-3444ad378c7a","children":[],"parent":"bd7f60f8-0039-5817-b8b4-a1817a58f072","internal":{"content":"---\ntitle: MBO Constants\n---\nWhen writing automation scripts, just like you would in Java, there are times where you'll need to utilize flags in Maximo that are referenced in the MboConstants class. For example: if you try to set a value on an attribute in Maximo that is set as read-only without suppressing the access check your automation script will generate an error. If you know the literal value, you could use it (2L in this case) but that is difficult for another developer to read, especially when multiple flags are combined together. Instead you should utilize MboConstants for your flag instead.\n\n You could import this class and then reference it in your code like: \n```python\nfrom psdi.mbo import MboConstants\nmbo.setValue(\"DESCRIPTION\",\"My description\",MboConstants.NOACCESSCHECK)\n```\n\nBut that's not typically required. For most of your automation scripts you'll be working with a MBO (typically utilizing the implicit variable mbo). The MboConstants are implemented in the Mbo class so every class that extends the Mbo class (which is every Mbo in Maximo) exposes these constants for you automatically. For example, we could have written the above like:\n\n```python\nmbo.setValue(\"DESCRIPTION\",\"My description\",mbo.NOACCESSCHECK)\n```\n\nIf you have multiple flags to set you can combine them like:\n```python\nmbo.setValue(\"DESCRIPTION\",\"My description\",mbo.NOACCESSCHECK|mbo.NOVALIDATION)\n```","type":"Mdx","contentDigest":"2a4225c27e87ad4780f2a997e15ba772","owner":"gatsby-plugin-mdx","counter":150},"frontmatter":{"title":"MBO Constants"},"exports":{},"rawBody":"---\ntitle: MBO Constants\n---\nWhen writing automation scripts, just like you would in Java, there are times where you'll need to utilize flags in Maximo that are referenced in the MboConstants class. For example: if you try to set a value on an attribute in Maximo that is set as read-only without suppressing the access check your automation script will generate an error. If you know the literal value, you could use it (2L in this case) but that is difficult for another developer to read, especially when multiple flags are combined together. Instead you should utilize MboConstants for your flag instead.\n\n You could import this class and then reference it in your code like: \n```python\nfrom psdi.mbo import MboConstants\nmbo.setValue(\"DESCRIPTION\",\"My description\",MboConstants.NOACCESSCHECK)\n```\n\nBut that's not typically required. For most of your automation scripts you'll be working with a MBO (typically utilizing the implicit variable mbo). The MboConstants are implemented in the Mbo class so every class that extends the Mbo class (which is every Mbo in Maximo) exposes these constants for you automatically. For example, we could have written the above like:\n\n```python\nmbo.setValue(\"DESCRIPTION\",\"My description\",mbo.NOACCESSCHECK)\n```\n\nIf you have multiple flags to set you can combine them like:\n```python\nmbo.setValue(\"DESCRIPTION\",\"My description\",mbo.NOACCESSCHECK|mbo.NOVALIDATION)\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/coreconcepts/mboconstants.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}