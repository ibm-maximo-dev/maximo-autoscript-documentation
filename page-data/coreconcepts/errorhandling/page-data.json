{
    "componentChunkName": "component---src-pages-coreconcepts-errorhandling-mdx",
    "path": "/coreconcepts/errorhandling/",
    "result": {"pageContext":{"frontmatter":{"title":"Errors and Warnings In Scripts"},"relativePagePath":"/coreconcepts/errorhandling.mdx","titleType":"append","MdxNode":{"id":"38b00b3c-04ba-5c3c-9d24-d1ed4c680d3b","children":[],"parent":"923cfcda-d880-5488-ad30-a9b76e39aa5e","internal":{"content":"---\ntitle: Errors and Warnings In Scripts\n---\n\n## Errors and Warnings In Scripts\n\nMaximo errors in 75 version used to get done by setting these variables - errorgroup, errorkey\nand params. Setting those did not stop the execution, as the execution will continue till the end\nof that script and then it will check the flags and throw the error. Often this may not be the\nexpected behavior. To fix this issue, in 76 we added utility methods to the global “service”\nvariable to throw errors and warnings. The example below should replace what you have been\ndoing with errorkey and errorgroups in 75.\n\n\n```python\nservice.error(\"po\",\"novendor\")\n```\n\n\nShowing a warning message can be done fairly easily with automation scripts. Say we want to\nshow a warning to the users when they save a PO with no lines.\nTo do this, first we need to create a warning message from the messages dialog in the db config\napplication. Say we name it \"nolines\" under the message group \"po\".\nWe create an Object Launch Point - Save event on Add and Update. The code below (py)\nvalidates the POLINE count and uses the \"service\" global variable to show the warning.\n\n\n```python\nif mbo.getMboSet(\"POLINE\").count()==0 and interactive:\n  service.setWarning(\"po\",\"nolines\", None)\n```","type":"Mdx","contentDigest":"6c9da8be86a17e58c767004035b760df","owner":"gatsby-plugin-mdx","counter":147},"frontmatter":{"title":"Errors and Warnings In Scripts"},"exports":{},"rawBody":"---\ntitle: Errors and Warnings In Scripts\n---\n\n## Errors and Warnings In Scripts\n\nMaximo errors in 75 version used to get done by setting these variables - errorgroup, errorkey\nand params. Setting those did not stop the execution, as the execution will continue till the end\nof that script and then it will check the flags and throw the error. Often this may not be the\nexpected behavior. To fix this issue, in 76 we added utility methods to the global “service”\nvariable to throw errors and warnings. The example below should replace what you have been\ndoing with errorkey and errorgroups in 75.\n\n\n```python\nservice.error(\"po\",\"novendor\")\n```\n\n\nShowing a warning message can be done fairly easily with automation scripts. Say we want to\nshow a warning to the users when they save a PO with no lines.\nTo do this, first we need to create a warning message from the messages dialog in the db config\napplication. Say we name it \"nolines\" under the message group \"po\".\nWe create an Object Launch Point - Save event on Add and Update. The code below (py)\nvalidates the POLINE count and uses the \"service\" global variable to show the warning.\n\n\n```python\nif mbo.getMboSet(\"POLINE\").count()==0 and interactive:\n  service.setWarning(\"po\",\"nolines\", None)\n```","fileAbsolutePath":"/home/sls/git/maximo-app-framework/maximo-autoscript-documentation/src/pages/coreconcepts/errorhandling.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}