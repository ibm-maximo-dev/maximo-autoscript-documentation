{
    "componentChunkName": "component---src-pages-coreconcepts-errorhandling-mdx",
    "path": "/coreconcepts/errorhandling/",
    "result": {"pageContext":{"frontmatter":{"title":"Errors and warnings in scripts"},"relativePagePath":"/coreconcepts/errorhandling.mdx","titleType":"append","MdxNode":{"id":"a434dad8-d06e-58e8-af33-03f048f040a1","children":[],"parent":"36cc4c35-ebc3-579e-b62f-3f412feb719a","internal":{"content":"---\ntitle: Errors and warnings in scripts\n---\n\n## Errors and warnings in scripts\n\nErrors in Maximo 7.5 used to get done by setting the variables, errorgroup, errorkey\nand params. Setting these variables did not stop the execution which would continue till the end\nof that script, check the flags, and throw the error. Often this may not be the\nexpected behavior. To fix this issue, in 7.6, the utility methods has been added to the global “service”\nvariable to throw errors and warnings. The following example should replace what you have been\ndoing with errorkey and errorgroups in Maximo 7.5:\n\n\n```python\nservice.error(\"po\",\"novendor\")\n```\n\n\nShowing a warning message can be done fairly easily with automation scripts. For example, if you want to show a warning to the users when they save a PO with no lines:\n\n1. Create a warning message from the messages dialog in the db config\napplication. \n2. You can name it \"nolines\" under the message group \"po\".\n3. Create an Object Launch Point - Save event on Add and Update. \n\nThe following code (py)\nvalidates the POLINE count and uses the \"service\" global variable to show the warning:\n\n\n```python\nif mbo.getMboSet(\"POLINE\").count()==0 and interactive:\n  service.setWarning(\"po\",\"nolines\", None)\n```","type":"Mdx","contentDigest":"5b0ad98a4787daca0d1650d081b18d68","owner":"gatsby-plugin-mdx","counter":168},"frontmatter":{"title":"Errors and warnings in scripts"},"exports":{},"rawBody":"---\ntitle: Errors and warnings in scripts\n---\n\n## Errors and warnings in scripts\n\nErrors in Maximo 7.5 used to get done by setting the variables, errorgroup, errorkey\nand params. Setting these variables did not stop the execution which would continue till the end\nof that script, check the flags, and throw the error. Often this may not be the\nexpected behavior. To fix this issue, in 7.6, the utility methods has been added to the global “service”\nvariable to throw errors and warnings. The following example should replace what you have been\ndoing with errorkey and errorgroups in Maximo 7.5:\n\n\n```python\nservice.error(\"po\",\"novendor\")\n```\n\n\nShowing a warning message can be done fairly easily with automation scripts. For example, if you want to show a warning to the users when they save a PO with no lines:\n\n1. Create a warning message from the messages dialog in the db config\napplication. \n2. You can name it \"nolines\" under the message group \"po\".\n3. Create an Object Launch Point - Save event on Add and Update. \n\nThe following code (py)\nvalidates the POLINE count and uses the \"service\" global variable to show the warning:\n\n\n```python\nif mbo.getMboSet(\"POLINE\").count()==0 and interactive:\n  service.setWarning(\"po\",\"nolines\", None)\n```","fileAbsolutePath":"/home/travis/build/maximo-app-framework/maximo-autoscript-documentation/src/pages/coreconcepts/errorhandling.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}